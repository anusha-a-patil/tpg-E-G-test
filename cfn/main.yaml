AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template to create an S3 bucket

Parameters:
#S3 Parameters  
  EnvType:
    Type: String
    Default: "dev"
    Description: The environment type (e.g., prod, dev)
  DomainName:
    Type: String
    Description: The name of the domain
  BucketFilePath:
    Type: String
    Description: bucket yaml path
#GlueDB Parameters
  DatabaseName:
    Type: String
    Default: 'tpg-glue-db'  
    Description: 'Name of the Glue Database'

#Crawler Parameters
  CrawlerName:
    Type: String
    Default: 'tpg-glue-crawler'
    Description: 'Name of the Glue Crawler'

#Redshift Parameters
  WorkgroupName:
    Type: String
    Default: 'tpg-workgroup'    
    Description: 'Name of the Redshift Serverless workgroup'
  NamespaceName:
    Type: String
    Default: 'tpg-namespace'     
    Description: 'Name of the Redshift Serverless namespace'
  RedshiftDatabaseName:
    Type: String
    Default: 'tpg-redshiftdb'    
    Description: 'Name of the initial database to be created'
  AdminUsername:
    Type: String
    Default: 'tpg-admin' #Use secrets Manager to store credentias    
    Description: 'Admin username for the Redshift Serverless instance'
  AdminUserPassword:
    Type: String
    Default: 'tpg-password' #Use secrets Manager to store credentias    
    NoEcho: true
    Description: 'Admin user password for the Redshift Serverless instance'
  BaseCapacity:
    Type: Number
    Default: 32
    Description: 'Base RPU capacity for the Redshift Serverless instance'
  RedshiftStackUrl:
    Type: String
    Description: 'S3 URL of the nested stack template' 

Resources:
  s3buckets:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Ref BucketFilePath
      Parameters:
        EnvType: !Ref EnvType
        DomainName: !Ref DomainName

  GlueDatabase:
    Type: AWS::Glue::Database
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseInput:
        Name: !Ref DatabaseName
        Description: "Database for storing metadata from Glue Crawler"

  GlueCrawlerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - glue.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole
      Policies:
        - PolicyName: S3Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:ListBucket
                Resource:
                  - !Sub 'arn:aws:s3:::${s3buckets.Outputs.LandingBucketName}'
                  - !Sub 'arn:aws:s3:::${s3buckets.Outputs.LandingBucketName}/*'

  GlueCrawler:
    Type: AWS::Glue::Crawler
    Properties:
      Name: !Ref CrawlerName
      Role: !GetAtt GlueCrawlerRole.Arn
      DatabaseName: !Ref DatabaseName
      Targets:
        S3Targets:
          - Path: !Sub 's3://${s3buckets.Outputs.LandingBucketName}'
      SchemaChangePolicy:
        UpdateBehavior: "UPDATE_IN_DATABASE"
        DeleteBehavior: "LOG"

  RedshiftServerlessStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Ref RedshiftStackUrl
      Parameters:
        WorkgroupName: !Ref WorkgroupName
        NamespaceName: !Ref NamespaceName
        DatabaseName: !Ref RedshiftDatabaseName
        AdminUsername: !Ref AdminUsername
        AdminUserPassword: !Ref AdminUserPassword
        BaseCapacity: !Ref BaseCapacity

Outputs:
  LandingBucketName:
    Description: The name of the Landing S3 bucket
    Value: !GetAtt s3buckets.Outputs.LandingBucketName
  RawS3BucketName:
    Description: The name of the Raw S3 bucket
    Value: !GetAtt s3buckets.Outputs.RawS3BucketName
  EnrichedS3BucketName:
    Description: The name of the Enriched S3 bucket
    Value: !GetAtt s3buckets.Outputs.EnrichedS3BucketName
  DatabaseName:
    Description: 'Name of the Glue Database'
    Value: !Ref DatabaseName
  CrawlerName:
    Description: 'Name of the created Glue Crawler'
    Value: !Ref CrawlerName
  NamespaceArn:
    Description: 'ARN of the Redshift Serverless Namespace'
    Value: !GetAtt RedshiftServerlessStack.Outputs.NamespaceArn
  WorkgroupArn:
    Description: 'ARN of the Redshift Serverless Workgroup'
    Value: !GetAtt RedshiftServerlessStack.Outputs.WorkgroupArn


