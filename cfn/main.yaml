AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template to create an S3 bucket

Parameters:
  EnvType:
    Type: String
    Default: "dev"
    Description: The environment type (e.g., prod, dev)
  DomainName:
    Type: String
    Description: The name of the domain
#S3 Parameters
  BucketFilePath:
    Type: String
    Description: bucket yaml path
#GlueDB Parameters
  GlueDBPath:
    Type: String
    Description: Database yaml path    

#Crawler Parameters
  GlueCrawlerPath:
    Type: String
    Description: Crawler yaml path 
  S3TargetPath:
    Type: String
    Description: "s3://landing-console/" 

# #Redshift Parameters
#   WorkgroupName:
#     Type: String
#     Default: 'tpg-redshift-workgroup'
#     Description: 'Name of the Redshift Serverless workgroup'
#   NamespaceName1:
#     Type: String
#     Default: 'tpg-redshift-namespace1'
#     Description: 'Name of the Redshift Serverless namespace'
#   NamespaceName2:
#     Type: String
#     Default: 'tpg-redshift-namespace2'
#     Description: 'Name of the Redshift Serverless namespace'    
#   RedshiftDatabaseName:
#     Type: String
#     Default: 'tpg-redshift-database'
#     Description: 'Name of the initial database to be created'
#   AdminUsername:
#     Type: String
#     Default: 'admin'
#     Description: 'Admin username for the Redshift Serverless instance'
#   AdminUserPassword:
#     Type: String
#     Default: 'Password28'
#     NoEcho: true
#     Description: 'Admin user password for the Redshift Serverless instance'
#   BaseCapacity:
#     Type: Number
#     Default: 32
#     Description: 'Base RPU capacity for the Redshift Serverless instance'
#   RedshiftStackUrl:
#     Type: String
#     Description: 'S3 URL of the nested stack template'
#   SubnetIds:
#     Type: String
#     Description: 'Subnet Ids'
#     Default: subnet-0e02df7b9e58e3960,subnet-05d7a985f0bdf9b64,subnet-04fc4b2eacf4f1df4
# #Dynamo DB Parameters
#   TableName:
#     Type: String
#     Description: 'Name of the DynamoDB table'
#     Default: 'my-dynamodb-table'
#   ReadCapacityUnits:
#     Type: Number
#     Description: 'Read capacity units for the table'
#     Default: 5
#     MinValue: 1
#   WriteCapacityUnits:
#     Type: Number
#     Description: 'Write capacity units for the table'
#     Default: 5
#     MinValue: 1
#   DynamoDBStackUrl:
#     Type: String
#     Description: 'Dynamo DB S3 URL of the nested stack template'

# #LF Parameters
#   LFStackUrl:
#     Type: String
#     Description: 'LF Stack S3 URL of the nested stack template'

Resources:
  s3buckets:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Ref BucketFilePath
      Parameters:
        EnvType: !Ref EnvType
        DomainName: !Ref DomainName

  GlueDatabase:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Ref GlueDBPath
      Parameters:
        EnvType: !Ref EnvType
        DomainName: !Ref DomainName

  GlueCrawler:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Ref GlueCrawlerPath
      Parameters:
        EnvType: !Ref EnvType
        DomainName: !Ref DomainName
        DatabaseName: !GetAtt GlueDatabase.Outputs.DatabaseName
        S3TargetPath: !Ref S3TargetPath

  RedshiftserverlessStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Ref RedshiftStackUrl
      Parameters:
        WorkgroupName: !Ref WorkgroupName
        NamespaceName1: !Ref NamespaceName1
        NamespaceName2: !Ref NamespaceName2
        RedshiftDatabaseName: !Ref RedshiftDatabaseName
        AdminUsername: !Ref AdminUsername
        AdminUserPassword: !Ref AdminUserPassword
        BaseCapacity: !Ref BaseCapacity
        SubnetIds: !Ref SubnetIds

  DynamoDBStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Ref DynamoDBStackUrl
      Parameters:
        TableName: !Ref TableName
        ReadCapacityUnits: !Ref ReadCapacityUnits
        WriteCapacityUnits: !Ref WriteCapacityUnits

  LakeFormationStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Ref LFStackUrl
      Parameters:
        DataLakeBucketName: !GetAtt s3buckets.Outputs.EnrichedS3BucketName
        DatabaseName: !GetAtt GlueDatabase.Outputs.DatabaseName


Outputs:
  LandingBucketName:
    Description: The name of the Landing S3 bucket
    Value: !GetAtt s3buckets.Outputs.LandingBucketName
  RawS3BucketName:
    Description: The name of the Raw S3 bucket
    Value: !GetAtt s3buckets.Outputs.RawS3BucketName
  EnrichedS3BucketName:
    Description: The name of the Enriched S3 bucket
    Value: !GetAtt s3buckets.Outputs.EnrichedS3BucketName
  DatabaseName:
    Description: 'Name of the Glue Database'
    Value:  !GetAtt GlueDatabase.Outputs.DatabaseName
  CrawlerName:
    Description: 'Name of the created Glue Crawler'
    Value:  !GetAtt GlueCrawler.Outputs.CrawlerName
  NamespaceName1:
    Description: 'Name of the Redshift Serverless Namespace'
    Value: !GetAtt RedshiftStack.Outputs.NamespaceName1
  NamespaceName2:
    Description: 'Name of the Redshift Serverless Namespace'
    Value: !GetAtt RedshiftStack.Outputs.NamespaceName2   
  # WorkgroupArn:
  #   Description: 'ARN of the Redshift Serverless Workgroup'
  #   Value: !GetAtt RedshiftStack.Outputs.WorkgroupArn
  RedshiftServerlessRoleArn:
    Description: 'ARN of the IAM Role for Redshift Serverless'
    Value: !GetAtt RedshiftStack.Outputs.RedshiftServerlessRoleArn
  SecurityGroupId:
    Description: 'ID of the Security Group for Redshift Serverless'
    Value: !GetAtt RedshiftStack.Outputs.SecurityGroupId
  TableName:
    Description: 'Name of the created DynamoDB table'
    Value: !GetAtt DynamoDBStack.Outputs.TableName


