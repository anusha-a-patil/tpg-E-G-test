AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template to create an S3 bucket

Parameters:
#S3 Parameters  
  EnvType:
    Type: String
    Default: "dev"
    Description: The environment type (e.g., prod, dev)
  DomainName:
    Type: String
    Description: The name of the domain
  BucketFilePath:
    Type: String
    Description: bucket yaml path
#GlueDB Parameters
  DatabaseName:
    Type: String
    Default: 'tpg-glue-db'  
    Description: 'Name of the Glue Database'

#Crawler Parameters
  CrawlerName:
    Type: String
    Default: 'tpg-glue-crawler'
    Description: 'Name of the Glue Crawler'

#Redshift Parameters
Parameters:
  ClusterIdentifier:
    Type: String
    Default: 'tpg-identifier'    
    Description: 'The identifier of the cluster'
  DatabaseName:
    Type: String
    Default: 'tpg-database'    
    Description: 'The name of the first database to be created when the cluster is created'
  MasterUsername:
    Type: String
    Default: 'admin'    #Store the credentials in secretManager
    Description: 'The user name associated with the master user account for the cluster'
  MasterUserPassword:
    Type: String
    NoEcho: true
    Default: 'password' #Store the credentials in secretManager
    Description: 'The password associated with the master user account for the cluster'
  NodeType:
    Type: String
    Default: dc2.large
    Description: 'The node type to be provisioned for the cluster'
  NumberOfNodes:
    Type: Number
    Default: 1
    Description: 'The number of compute nodes in the cluster'
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: 'The VPC ID where the cluster will be created'
  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: 'The list of VPC subnet IDs for the cluster'
  NestedStackS3Url:
    Type: String
    Description: 'S3 URL of the nested stack template' 

Resources:
  s3buckets:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Ref BucketFilePath
      Parameters:
        EnvType: !Ref EnvType
        DomainName: !Ref DomainName

  GlueDatabase:
    Type: AWS::Glue::Database
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseInput:
        Name: !Ref DatabaseName
        Description: "Database for storing metadata from Glue Crawler"

  GlueCrawlerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - glue.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole
      Policies:
        - PolicyName: S3Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:ListBucket
                Resource:
                  - !Sub 'arn:aws:s3:::${s3buckets.Outputs.LandingBucketName}'
                  - !Sub 'arn:aws:s3:::${s3buckets.Outputs.LandingBucketName}/*'

  GlueCrawler:
    Type: AWS::Glue::Crawler
    Properties:
      Name: !Ref CrawlerName
      Role: !GetAtt GlueCrawlerRole.Arn
      DatabaseName: !Ref DatabaseName
      Targets:
        S3Targets:
          - Path: !Sub 's3://${s3buckets.Outputs.LandingBucketName}'
      SchemaChangePolicy:
        UpdateBehavior: "UPDATE_IN_DATABASE"
        DeleteBehavior: "LOG"

  RedshiftStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Ref NestedStackS3Url
      Parameters:
        ClusterIdentifier: !Ref ClusterIdentifier
        DatabaseName: !Ref DatabaseName
        MasterUsername: !Ref MasterUsername
        MasterUserPassword: !Ref MasterUserPassword
        NodeType: !Ref NodeType
        NumberOfNodes: !Ref NumberOfNodes
        VpcId: !Ref VpcId
        SubnetIds: !Join [',', !Ref SubnetIds]

Outputs:
  ClusterEndpoint:
    Description: 'Endpoint of the Redshift cluster'
    Value: !GetAtt RedshiftStack.Outputs.ClusterEndpoint
  ClusterPort:
    Description: 'Port of the Redshift cluster'
    Value: !GetAtt RedshiftStack.Outputs.ClusterPort


